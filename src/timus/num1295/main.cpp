// -*- mode: c++; coding: utf-8 -*-
#include <iostream>
//#include <cmath>


/*! \brief Задача №1295. Бред
*
* https://acm.timus.ru/problem.aspx?space=1&num=1295
*
* Пятый день робот-погрузчик JK546L54p недвижимо валялся под толстым слоем
* Сибелианского плутониевого шлака. Ещё бы! Жесточайший удар атмосферным
* электричеством привёл к разгерметизации топливных элементов робота. Кто будет
* разбираться с этой грудой оплавленного, искорёженного металла тут, где нет ни
* одного робототехника на расстоянии в сотню парсеков? Робот-комиссар и не пытался
* разбираться, что произошло c JK546L54p. В отвалы и всё, разговор роботов-комиссаров
* обычно короток. Никто и не обратил внимание, что позитронный мозг JK546L54p ещё
* функционирует. Если бы сейчас рядом с JK546L54p оказался робопсихолог! Нет,
* конечно, он бы мгновенно погиб от жесточайшего гамма-излучения, но… Если бы он
* подключил визуализатор мышления к оплавленным разъёмам JK546L54p! Он бы увидел
* странное зрелище. Робот творил! Нет, я не шучу. Он исследовал. Полуслучайные
* объекты всплывали в его мозгу, и он их исследовал. Безумные свойства, безумные
* теоремы.
*
* Ваша задача: Вот, кстати, пример. Рассмотрим выражение 1^n+2^n+3^n+4^n. На
* сколько нулей заканчивается его десятичная запись? JK546L54p смог решить эту
* задачу, а ты, курсант, сможешь?
*
* Исходные данные: В единственной строке записано целое число n (1 <= n <= 300000).
*
* Результат: Выведите число нулей, на которые оканчивается десятичная запись
* 1^n+2^n+3^n+4^n.
*/
int main()
{
  int n;
  std::cin >> n;

/*
30
--
  for (int i = 1; i <= n; ++i)
  {
    uint64_t x = (uint64_t)(powl(1.0, i) + 0.5);
    x += (uint64_t)(powl(2.0, i) + 0.5);
    x += (uint64_t)(powl(3.0, i) + 0.5);
    x += (uint64_t)(powl(4.0, i) + 0.5);
    std::cout << x << std::endl;
  }
--
10                 : 1
30                 : 1
100                : 2
354                : 0
1300               : 2- 5
4890               : 1
18700              : 2
72354              : 0
282340             : 1
1108650            : 1
4373500            : 2
17312754           : 0
68711380           : 1
273234810          : 1
1088123500         : 2- 15
4338079554         : 0
17309140420        : 1
69107159370        : 1
276040692700       : 2
1102999460754      : 0
4408508961460      : 1
17623571298330     : 1
70462895745100     : 2
281757423024354    : 0
1126747229006500   : 2- 25
4506141560307690   : 1
18022024241184700  : 2
72080471098818354  : 0
288299007065947540 : 1
*/

  int zeroes;
  if ((n % 10) == 5)
    zeroes = 2;
  else
  {
    switch (n % 4)
    {
    case 1:
    case 2: zeroes = 1; break;
    case 3: zeroes = 2; break;
    case 0: zeroes = 0; break;
    }
  }
  std::cout << zeroes << std::endl;

  return 0;
}
